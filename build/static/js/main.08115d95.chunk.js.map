{"version":3,"sources":["components/header.js","components/global.js","components/globalTable.js","components/sidenote.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","datum","props","state","data","fetch","then","res","json","jsonData","setState","isLoaded","this","console","log","class","cases","active","recovered","deaths","GlobalTable","datas","table","document","getElementById","i","length","row","country","innerHTML","buildTable","id","Sidenote","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"uNAEqBA,E,uKAEjB,OACE,yBAAKC,UAAU,6BACb,yBAAKA,UAAU,OACf,uBAAGA,UAAU,gBAAe,mCAA5B,0C,GAL4BC,aCAfC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,IAHS,E,gEAME,IAAD,OAClBC,MAAM,6CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKC,SAAS,CACZC,UAAU,EACVP,KAAMK,S,+BAIJ,IACAL,EAASQ,KAAKT,MAAdC,KAER,OADAS,QAAQC,WAAWV,GAEjB,oCACE,yBAAKL,UAAU,aACb,yBAAKA,UAAU,+BAEX,yBAAKA,UAAU,aACb,0CAAe,uBAAGgB,MAAM,iCACxB,uBAAGhB,UAAU,eAAeK,EAAKY,QAEnC,yBAAMjB,UAAU,aACd,2CAAgB,uBAAGgB,MAAM,iCACzB,uBAAGhB,UAAU,eAAeK,EAAKa,SAEnC,yBAAKlB,UAAU,aACb,wCAAa,uBAAGgB,MAAM,yCACtB,uBAAGhB,UAAU,eAAeK,EAAKc,YAEnC,yBAAKnB,UAAU,aACb,qCAAU,uBAAGgB,MAAM,iCACnB,uBAAGhB,UAAU,eAAeK,EAAKe,gB,GAvCdnB,aCApB,SAASoB,IAuBpB,OArBAf,MAAM,sEACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACe,GACLR,QAAQC,IAAIO,GACV,SAAoBjB,GAElB,IADA,IAAIkB,EAAQC,SAASC,eAAe,SAC3BC,EAAI,EAAGA,EAAIrB,EAAKsB,OAAQD,IAAK,CACpC,IAAIE,EAAG,oCACCvB,EAAKqB,GAAGG,QADT,sCAECxB,EAAKqB,GAAGT,MAFT,sCAGCZ,EAAKqB,GAAGR,OAHT,sCAICb,EAAKqB,GAAGP,UAJT,sCAKCd,EAAKqB,GAAGN,OALT,8BAOPG,EAAMO,WAAaF,GAGvBG,CAAWT,MASX,2BAAOtB,UAAU,uBACjB,4BACE,yCACA,2CACA,4CACA,0CACA,uCAIF,2BAAOgC,GAAG,QAAQhB,MAAM,oBCtCnB,SAASiB,IACpB,OACE,yBAAKjB,MAAM,IACP,yBAAKA,MAAM,iCACP,yBAAKA,MAAM,8CACP,yBAAKA,MAAM,qBACP,0CACA,sWAUZ,qCACA,yBAAKA,MAAM,+BACP,yBAAKA,MAAM,8CACP,yBAAKA,MAAM,qBACP,6CACA,uWCCPkB,MApBf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,yBAAKlC,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,kBAACqB,EAAD,OAEF,yBAAKrB,UAAU,SACb,kBAACiC,EAAD,WCLQE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlB,SAASC,eAAe,SDyHpB,kBAAmBkB,WACrBA,UAAUC,cAAcC,MACrBtC,MAAK,SAAAuC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnC,QAAQmC,MAAMA,EAAMC,a","file":"static/js/main.08115d95.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"container start-container\">\r\n        <div className=\"row\">\r\n        <p className=\"topContainer\"><span>P</span>aSE Covid-19 Tracker Application</p>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class datum extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://gtla6-covidtracker.herokuapp.com/\")\r\n      .then((res) => res.json())\r\n      .then((jsonData) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          data: jsonData,\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    const { data } = this.state;\r\n    console.log(typeof data);\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-between\">\r\n            {/* <div className=\"global-data\"> */}\r\n              <div className=\"col-2 box\">\r\n                <p>Total Cases <i class=\"fa fa-arrow-circle-up icons\"></i></p>\r\n                <b className=\"counterPara\">{data.cases}</b>\r\n              </div>\r\n              <div  className=\"col-2 box\">\r\n                <p>Active Cases <i class=\"fa fa-arrow-circle-up icons\"></i></p>\r\n                <b className=\"counterPara\">{data.active}</b>\r\n              </div>\r\n              <div className=\"col-2 box\">\r\n                <p>Recovered <i class=\"fa fa-arrow-circle-down icons-green\"></i></p>\r\n                <b className=\"counterPara\">{data.recovered}</b>\r\n              </div>\r\n              <div className=\"col-2 box\">\r\n                <p>Deaths <i class=\"fa fa-arrow-circle-up icons\"></i></p>\r\n                <b className=\"counterPara\">{data.deaths}</b>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        {/* </div> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function GlobalTable() {\r\n    \r\n    fetch(\"https://disease.sh/v3/covid-19/countries?sort=cases&allowNull=true\")\r\n      .then((res) => res.json())\r\n      .then((datas) => {\r\n        console.log(datas);\r\n          function buildTable(data) {\r\n            var table = document.getElementById(\"tdata\");\r\n            for (var i = 0; i < data.length; i++) {\r\n              var row = `<tr>\r\n                <td>${data[i].country}</td>\r\n                <td>${data[i].cases}</td>\r\n                <td>${data[i].active}</td>\r\n                <td>${data[i].recovered}</td>\r\n                <td>${data[i].deaths}</td>\r\n              </tr>`;\r\n              table.innerHTML += row;\r\n            }\r\n          }\r\n          buildTable(datas);\r\n        })\r\n    \r\n\r\n    return (\r\n      // <div className=\"container\">\r\n      //   <div className=\"row\">\r\n      //     <div className=\"col-8\">\r\n\r\n          <table className=\"table table-striped\">\r\n          <tr>\r\n            <th>Countries</th>\r\n            <th>Total Cases</th>\r\n            <th>Active Cases</th>\r\n            <th>Recoveries</th>\r\n            <th>Deaths</th>\r\n          </tr>\r\n        \r\n\r\n          <tbody id=\"tdata\" class=\"stripped-table\"></tbody>\r\n        </table>\r\n      //   </div>\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n\r\n","import React from 'react'\r\n\r\nexport default function Sidenote() {\r\n    return (\r\n      <div class=\"\">\r\n          <div class=\"col align-self-start side-box\">\r\n              <div class=\"row justify-content-center innerBoxPadding\">\r\n                  <div class=\"col-10  inner-box\">\r\n                      <b>Health Tips</b>\r\n                      <p>Lorem ipsum dolor sit amet \r\n                      consectetur adipisicing elit. Illum delen\r\n                      iti earum corporis ducimus expedita vel asperio\r\n                      is inventore quidem repellat id voluptate. Labore assumenda quidem beatae, fu\r\n                      giat enim consequuntur? Reiciendis itaque quam quae ratione illo dolore enim, \r\n                      necessitatibus veritatis sint laborum nam nesciunt!\r\n                      </p>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div>&nbsp;</div>\r\n          <div class=\"col align-self-end side-box\">\r\n              <div class=\"row justify-content-center innerBoxPadding\">\r\n                  <div class=\"col-10  inner-box\">\r\n                      <b>News & Updates</b>\r\n                      <p>Lorem ipsum dolor sit amet \r\n                      consectetur adipisicing elit. Illum delen\r\n                      iti earum corporis ducimus expedita vel asperio\r\n                      is inventore quidem repellat id voluptate. Labore assumenda quidem beatae, fu\r\n                      giat enim consequuntur? Reiciendis itaque quam quae ratione illo dolore enim, \r\n                      necessitatibus veritatis sint laborum nam nesciunt!\r\n                      </p>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\n                      \r\n","import React from \"react\";\r\nimport Header from \"./components/header\";\r\nimport Global from \"./components/global\";\r\nimport GlobalTable from \"./components/globalTable\";\r\nimport Sidenote from \"./components/sidenote\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header></Header>\r\n      <Global></Global>\r\n      \r\n      <div className=\"container move\">\r\n        <div className=\"row\">\r\n          <div className=\"col-8\">\r\n            <GlobalTable></GlobalTable>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Sidenote></Sidenote>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './index.css';   \r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}